{{ header(5) }}

## Система

### Характеристики процессора:
```
{{ sh("sudo inxi -C") }}
```

### Характеристики памяти:
```
{{ sh("sudo inxi -m") }}
```

### Версия gcc:
```
{{ sh("gcc --version | head -n 1") }}
```

### Версия OpenMPI:
```
{{ sh("mpirun --version") }}
```

### Остальные Характеристики
```
{{ sh("uname -rm") }}
```

### Экспериментальные данные

#### Время исполнения в сравнении с лабораторной #1

![image](target/speed.png)

#### Эффективность на воркера

![image](target/acceleration.png)

#### Ускорение на воркера

![image](target/efficiency.png)

## Выводы

Был реализован алгоритм сортировки Шелла на MPI и проведено очередное сравнение реализаций на MPI и OpenMP. В ходе экспериментов было выяснено, что в данной задаче OpenMP работает быстрее, чем MPI.

Видимо оверхед на пересылку сообщений все еще выше. Вероятно, такие задачи как поиск простых чисел на отрезке покажут результат лучше, так как затраты на перессылку сообщений минимальны. 

## Исходный код

```c 
{{ sh('cat src/main.cpp') }}
```

